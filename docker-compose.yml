services:
  web:
    build:
      context: .
      args:
        - HOST_UID=${HOST_UID:-1000}  # Pass host user ID to Dockerfile
    volumes:
      - ./db:/app/db
      - static_volume:/app/staticfiles
      - /etc/yourcinemafilms/env.py:/etc/yourcinemafilms/env.py:ro  # Mount only the environment file as read-only
    environment:
      - DJANGO_DB_PATH=/app/db/db.sqlite3
      - HOST_UID=${HOST_UID:-1000}  # Make HOST_UID available in container
      - DJANGO_ALLOWED_HOSTS=yourcinemafilms.theworkpc.com,localhost,127.0.0.1
    security_opt:
      - no-new-privileges:true
    read_only: false  # Changed to false to allow writing to static files
    tmpfs:
      - /tmp:size=256M  # Temporary storage
      - /run
      - /var/lib/nginx  # Add nginx temp directory
    restart: on-failure
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    restart: on-failure

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro # Mount Let's Encrypt certificates
      - static_volume:/var/www/YourCinemaFilms/staticfiles:ro # Mount static files
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp:size=64M
      - /run
      - /var/lib/nginx  # Add nginx temp directory
    depends_on:
      - web
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
      - ./nginx/conf.d:/etc/nginx/conf.d
      - /etc/letsencrypt:/etc/letsencrypt # Mount Let's Encrypt certificates
      - static_volume:/var/www/YourCinemaFilms/staticfiles # Mount static files
    depends_on:
      - web

volumes:
  static_volume:
    driver: local  # For storing static files
  sqlite_data:
    driver: local  # For storing database files
