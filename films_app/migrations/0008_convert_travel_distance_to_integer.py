# Generated by Django 5.1.1 on 2025-03-08 15:59

from django.db import migrations, models
import re

def convert_travel_distance_to_integer(apps, schema_editor):
    UserProfile = apps.get_model('films_app', 'UserProfile')
    for profile in UserProfile.objects.all():
        if profile.travel_distance and isinstance(profile.travel_distance, str):
            # Try to extract a number from the string (e.g., "5 miles" -> 5)
            match = re.search(r'(\d+)', profile.travel_distance)
            if match:
                try:
                    # Convert to integer and save
                    profile.travel_distance = int(match.group(1))
                    profile.save()
                except (ValueError, TypeError):
                    # If conversion fails, set to None
                    profile.travel_distance = None
                    profile.save()
            else:
                # If no number found, set to None
                profile.travel_distance = None
                profile.save()

def reverse_convert_travel_distance(apps, schema_editor):
    # This is a one-way migration, but we provide a reverse function
    # that sets all values to a default string format
    UserProfile = apps.get_model('films_app', 'UserProfile')
    for profile in UserProfile.objects.all():
        if profile.travel_distance is not None:
            profile.travel_distance = f"{profile.travel_distance} miles"
            profile.save()


class Migration(migrations.Migration):

    dependencies = [
        ('films_app', '0007_userprofile_dashboard_activity_privacy_and_more'),
    ]

    operations = [
        # First, create a temporary field to store the integer values
        migrations.AddField(
            model_name='userprofile',
            name='travel_distance_int',
            field=models.PositiveIntegerField(blank=True, null=True),
        ),
        
        # Run the data migration to convert values
        migrations.RunPython(
            convert_travel_distance_to_integer,
            reverse_convert_travel_distance
        ),
        
        # Remove the old field
        migrations.RemoveField(
            model_name='userprofile',
            name='travel_distance',
        ),
        
        # Rename the new field to the original name
        migrations.RenameField(
            model_name='userprofile',
            old_name='travel_distance_int',
            new_name='travel_distance',
        ),
        
        # Update the field definition with the help text
        migrations.AlterField(
            model_name='userprofile',
            name='travel_distance',
            field=models.PositiveIntegerField(blank=True, help_text='How far are you willing to travel to a cinema (in miles)?', null=True),
        ),
    ]
